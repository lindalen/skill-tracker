[{"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\index.tsx":"1","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\App.tsx":"2","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSection.tsx":"3","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\TimerButton.tsx":"4","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\Timer.tsx":"5"},{"size":219,"mtime":1609690248871,"results":"6","hashOfConfig":"7"},{"size":295,"mtime":1610022187337,"results":"8","hashOfConfig":"7"},{"size":1732,"mtime":1610192369819,"results":"9","hashOfConfig":"7"},{"size":1322,"mtime":1610191910526,"results":"10","hashOfConfig":"7"},{"size":762,"mtime":1610192129368,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"kdgtk6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\index.tsx",[],["25","26"],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\App.tsx",[],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSection.tsx",["27"],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\TimerButton.tsx",["28","29"],"import React, {useState, useEffect} from 'react'\r\nimport playLogo from \"./play.png\";\r\nimport pauseLogo from \"./pause.png\";\r\nimport \"./TimerButton.css\";\r\nimport { url } from 'inspector';\r\n\r\ninterface TimerButtonProps {\r\n    makeActiveOpposite:()=>void;\r\n    active:boolean;\r\n    addSecond:()=>void;\r\n}\r\n\r\n\r\n\r\nexport const TimerButton: React.FC<TimerButtonProps> = ({makeActiveOpposite, active, addSecond}) => {\r\n        const [logoUrl, setLogoUrl] = useState(playLogo);\r\n        const [timerIntervalID, setTimerintervalID] = useState<any>(0);\r\n\r\n        function handleClick() {\r\n            if (active) {\r\n                setLogoUrl(playLogo);\r\n            } else {\r\n                setLogoUrl(pauseLogo);\r\n            }\r\n            makeActiveOpposite();\r\n        }\r\n        function handleTimer() {\r\n            if (active) {\r\n                let intervalID = setInterval(function() {addSecond();}, 1000);\r\n                setTimerintervalID(intervalID); \r\n            } else {\r\n                clearInterval(timerIntervalID);\r\n            }\r\n            \r\n            \r\n        }\r\n\r\n        useEffect(()=> {\r\n            handleTimer();\r\n        }, [active]);\r\n        return (\r\n            <button className=\"timer-button\" style={{backgroundImage: \"url(\" + logoUrl + \")\"}} onClick={handleClick}></button>\r\n        );\r\n}","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\Timer.tsx",["30"],"import React, {useEffect, useState} from 'react'\r\n\r\ninterface TimerProps {\r\n    time:Date;\r\n    startTime:Date;\r\n}\r\n\r\nexport const Timer: React.FC<TimerProps> = ({time, startTime}) => {\r\n        const [currentDiff, setCurrentDiff] = useState<number>(getDateDiffInSeconds());\r\n\r\n        function getDateDiffInSeconds() {\r\n            let diff = (time.getTime() - startTime.getTime()) / 1000;\r\n            return diff;\r\n        }\r\n\r\n        function updateTimeDifference() {\r\n            setCurrentDiff(getDateDiffInSeconds());\r\n        }\r\n\r\n        useEffect(()=> {\r\n            updateTimeDifference()\r\n        }, [time]);\r\n\r\n        return (\r\n            <div>\r\n                {currentDiff} seconds recorded.\r\n                \r\n            </div>\r\n        );\r\n}",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":28,"column":23,"nodeType":"37","messageId":"38","endLine":28,"endColumn":35},{"ruleId":"35","severity":1,"message":"39","line":5,"column":10,"nodeType":"37","messageId":"38","endLine":5,"endColumn":13},{"ruleId":"40","severity":1,"message":"41","line":40,"column":12,"nodeType":"42","endLine":40,"endColumn":20,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":22,"column":12,"nodeType":"42","endLine":22,"endColumn":18,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"@typescript-eslint/no-unused-vars","'setStartTime' is assigned a value but never used.","Identifier","unusedVar","'url' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTimer'. Either include it or remove the dependency array.","ArrayExpression",["48"],"React Hook useEffect has a missing dependency: 'updateTimeDifference'. Either include it or remove the dependency array.",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: [active, handleTimer]",{"range":"54","text":"55"},"Update the dependencies array to be: [time, updateTimeDifference]",{"range":"56","text":"57"},[1151,1159],"[active, handleTimer]",[613,619],"[time, updateTimeDifference]"]