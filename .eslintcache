[{"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\index.tsx":"1","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\App.tsx":"2","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSection.tsx":"3","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSectionGrid.tsx":"4","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\Title.tsx":"5","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\Timer.tsx":"6","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\TimerButton.tsx":"7"},{"size":230,"mtime":1610193786407,"results":"8","hashOfConfig":"9"},{"size":575,"mtime":1610547855496,"results":"10","hashOfConfig":"9"},{"size":1730,"mtime":1610193786405,"results":"11","hashOfConfig":"9"},{"size":269,"mtime":1610547855583,"results":"12","hashOfConfig":"9"},{"size":212,"mtime":1610547855623,"results":"13","hashOfConfig":"9"},{"size":751,"mtime":1610614647576,"results":"14","hashOfConfig":"9"},{"size":1318,"mtime":1610614221433,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"kdgtk6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\index.tsx",[],["33","34"],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\App.tsx",[],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSection.tsx",["35"],"import React, {useState} from \"react\";\r\nimport \"./SkillSection.css\";\r\nimport {TimerButton} from \"./TimerButton\";\r\nimport {Timer} from \"./Timer\";\r\n/**\r\n * Component Description\r\n * Data - total time spent on a skill, current timer value, goal time\r\n * Functionality - start timer, stop timer, display current timer value, display goal value\r\n * Sub-Components - Timer\r\n */\r\n\r\n/**\r\n * Planning\r\n * SkillSection\r\n- SkillName\r\n- TimerButton (hasStarted, setHasStarted, startTime, setStartTime) [also needs to swap logo on click]\r\n- ProgressBar (time, goaltime)\r\n- Timer (setTime?, time)\r\n */\r\n\r\ntype SkillSectionProps = {\r\n    skillName: string;\r\n}\r\n\r\n\r\nconst SkillSection: React.FC<SkillSectionProps> = ({skillName}) => {\r\n    const startDate = new Date(); /* ensures both current time and start time are initially the same */\r\n    const [startTime, setStartTime] = useState<Date>(startDate);\r\n    const [time, setTime] = useState<Date>(startDate);\r\n    const [active, setActive] = useState<boolean>(false);\r\n\r\n    function addSecond() {\r\n        setTime(currentTime => new Date(currentTime.getTime() + 1000));\r\n    }\r\n\r\n    function makeActiveOpposite() {\r\n        setActive(c => !c);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"cell\">\r\n                <div className=\"content-grid\">\r\n                    <p className=\"title\">{skillName}</p>\r\n                    <Timer time={time} startTime={startTime}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"cell\">\r\n                <TimerButton makeActiveOpposite={makeActiveOpposite} active={active} addSecond={addSecond}/>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SkillSection;","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSectionGrid.tsx",[],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\Title.tsx",[],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\Timer.tsx",["36"],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\TimerButton.tsx",["37","38"],"import React, {useState, useEffect} from 'react'\r\nimport playLogo from \"./play.png\";\r\nimport pauseLogo from \"./pause.png\";\r\nimport \"./TimerButton.css\";\r\nimport { url } from 'inspector';\r\n\r\ninterface TimerButtonProps {\r\n    makeActiveOpposite:()=>void;\r\n    active:boolean;\r\n    addSecond:()=>void;\r\n}\r\n\r\nexport const TimerButton: React.FC<TimerButtonProps> = ({makeActiveOpposite, active, addSecond}) => {\r\n        const [logoUrl, setLogoUrl] = useState(playLogo);\r\n        const [timerIntervalID, setTimerintervalID] = useState<any>(0);\r\n\r\n        function handleClick() {\r\n            if (active) {\r\n                setLogoUrl(playLogo);\r\n            } else {\r\n                setLogoUrl(pauseLogo);\r\n            }\r\n            makeActiveOpposite();\r\n        }\r\n        function handleTimer() {\r\n            if (active) {\r\n                let intervalID = setInterval(function() {addSecond();}, 1000);\r\n                setTimerintervalID(intervalID); \r\n            } else {\r\n                clearInterval(timerIntervalID);\r\n            }\r\n            \r\n            \r\n        }\r\n\r\n        useEffect(()=> {\r\n            handleTimer();\r\n        }, [active]);\r\n        return (\r\n            <button className=\"timer-button\" style={{backgroundImage: \"url(\" + logoUrl + \")\"}} onClick={handleClick}></button>\r\n        );\r\n}",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":28,"column":23,"nodeType":"45","messageId":"46","endLine":28,"endColumn":35},{"ruleId":"47","severity":1,"message":"48","line":20,"column":41,"nodeType":"49","endLine":20,"endColumn":47,"suggestions":"50"},{"ruleId":"43","severity":1,"message":"51","line":5,"column":10,"nodeType":"45","messageId":"46","endLine":5,"endColumn":13},{"ruleId":"47","severity":1,"message":"52","line":38,"column":12,"nodeType":"49","endLine":38,"endColumn":20,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'setStartTime' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDateDiffInSeconds'. Either include it or remove the dependency array.","ArrayExpression",["56"],"'url' is defined but never used.","React Hook useEffect has a missing dependency: 'handleTimer'. Either include it or remove the dependency array.",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Update the dependencies array to be: [getDateDiffInSeconds, time]",{"range":"62","text":"63"},"Update the dependencies array to be: [active, handleTimer]",{"range":"64","text":"65"},[580,586],"[getDateDiffInSeconds, time]",[1147,1155],"[active, handleTimer]"]