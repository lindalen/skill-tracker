[{"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\index.tsx":"1","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\App.tsx":"2","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSection.tsx":"3","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSectionGrid.tsx":"4","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\Title.tsx":"5","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\Timer.tsx":"6","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\TimerButton.tsx":"7","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSettings.tsx":"8","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSettingsRevealer.tsx":"9"},{"size":230,"mtime":1610193786407,"results":"10","hashOfConfig":"11"},{"size":777,"mtime":1610617568620,"results":"12","hashOfConfig":"11"},{"size":3108,"mtime":1610988188849,"results":"13","hashOfConfig":"11"},{"size":269,"mtime":1610547855583,"results":"14","hashOfConfig":"11"},{"size":212,"mtime":1610547855623,"results":"15","hashOfConfig":"11"},{"size":1078,"mtime":1610974592303,"results":"16","hashOfConfig":"11"},{"size":1318,"mtime":1610797650446,"results":"17","hashOfConfig":"11"},{"size":1645,"mtime":1610988225785,"results":"18","hashOfConfig":"11"},{"size":578,"mtime":1610801139460,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"kdgtk6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\index.tsx",[],["42","43"],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\App.tsx",[],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSection.tsx",["44"],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSectionGrid.tsx",[],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\Title.tsx",[],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\Timer.tsx",["45"],"import React, {useEffect, useState} from 'react'\r\n\r\ninterface TimerProps {\r\n    time:Date;\r\n    startTime:Date;\r\n    minToReachGoal: number;\r\n}\r\n\r\nexport const Timer: React.FC<TimerProps> = ({time, startTime, minToReachGoal}) => {\r\n        const [currentDiff, setCurrentDiff] = useState<number>(getDateDiffInSeconds());\r\n\r\n        function getDateDiffInSeconds() {\r\n            let diff = (time.getTime() - startTime.getTime()) / 1000;\r\n            return diff;\r\n        }\r\n\r\n        function updateTimeDifference() {\r\n            setCurrentDiff(getDateDiffInSeconds());\r\n        }\r\n\r\n        useEffect(updateTimeDifference, [time]);\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                // from: https://stackoverflow.com/questions/1322732/convert-seconds-to-hh-mm-ss-with-javascript\r\n                new Date(currentDiff * 1000).toISOString().substr(11, 8)\r\n                } \r\n                / \r\n                {\r\n                    new Date(minToReachGoal * 60 * 1000).toISOString().substr(11, 8)\r\n                }\r\n            </div>\r\n        );\r\n}","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\TimerButton.tsx",["46","47"],"import React, {useState, useEffect} from 'react'\r\nimport playLogo from \"./play.png\";\r\nimport pauseLogo from \"./pause.png\";\r\nimport \"./TimerButton.css\";\r\nimport { url } from 'inspector';\r\n\r\ninterface TimerButtonProps {\r\n    makeActiveOpposite:()=>void;\r\n    active:boolean;\r\n    addSecond:()=>void;\r\n}\r\n\r\nexport const TimerButton: React.FC<TimerButtonProps> = ({makeActiveOpposite, active, addSecond}) => {\r\n        const [logoUrl, setLogoUrl] = useState(playLogo);\r\n        const [timerIntervalID, setTimerintervalID] = useState<any>(0);\r\n\r\n        function handleClick() {\r\n            if (active) {\r\n                setLogoUrl(playLogo);\r\n            } else {\r\n                setLogoUrl(pauseLogo);\r\n            }\r\n            makeActiveOpposite();\r\n        }\r\n        function handleTimer() {\r\n            if (active) {\r\n                let intervalID = setInterval(function() {addSecond();}, 1000);\r\n                setTimerintervalID(intervalID); \r\n            } else {\r\n                clearInterval(timerIntervalID);\r\n            }\r\n            \r\n            \r\n        }\r\n\r\n        useEffect(()=> {\r\n            handleTimer();\r\n        }, [active]);\r\n        return (\r\n            <button className=\"timer-button\" style={{backgroundImage: \"url(\" + logoUrl + \")\"}} onClick={handleClick}></button>\r\n        );\r\n}","D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSettings.tsx",[],"D:\\Code Projects\\GITHUB REPOS\\skill-tracker\\src\\SkillSettingsRevealer.tsx",["48"],"import React, {useState} from 'react'\r\nimport arrow from \"./reveal-arrow.png\";\r\nimport \"./SkillSettingsRevealer.css\";\r\n\r\ninterface SkillSettingsRevealerProps {\r\n    revealFunc: () => void;\r\n    show: boolean;\r\n}\r\n\r\nexport const SkillSettingsRevealer: React.FC<SkillSettingsRevealerProps> = ({revealFunc, show}) => {\r\n\r\n        let transformVal = show ? \"scale(-1)\" : \"scale(1)\";\r\n        return (\r\n            \r\n            <button className=\"settings-button\" style={{backgroundImage: \"url(\" + arrow + \")\", transform: transformVal}} onClick={revealFunc}></button>\r\n        );\r\n}",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":32,"column":23,"nodeType":"55","messageId":"56","endLine":32,"endColumn":35},{"ruleId":"57","severity":1,"message":"58","line":21,"column":41,"nodeType":"59","endLine":21,"endColumn":47,"suggestions":"60"},{"ruleId":"53","severity":1,"message":"61","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":13},{"ruleId":"57","severity":1,"message":"62","line":38,"column":12,"nodeType":"59","endLine":38,"endColumn":20,"suggestions":"63"},{"ruleId":"53","severity":1,"message":"64","line":1,"column":16,"nodeType":"55","messageId":"56","endLine":1,"endColumn":24},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'setStartTime' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDateDiffInSeconds'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'url' is defined but never used.","React Hook useEffect has a missing dependency: 'handleTimer'. Either include it or remove the dependency array.",["68"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [getDateDiffInSeconds, time]",{"range":"73","text":"74"},"Update the dependencies array to be: [active, handleTimer]",{"range":"75","text":"76"},[625,631],"[getDateDiffInSeconds, time]",[1147,1155],"[active, handleTimer]"]